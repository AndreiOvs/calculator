import sys
import math

print('–¥–ª—è –∫–∞–∂–¥–æ–≥–æ ')

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
def integer_division(a, b):
    return a // b
3                            
def division(a, b):
    return a / b

def remainder(a, b):
    return a % b

def addition(a, b):
    return a + b

def subtraction(a, b):
    return a - b

def multiplication(a, b):
    return a * b

def power(a, b):
    return a ** b

def square_root(a):
    return a ** 0.5

def analyze_number(a):
    result = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ –¥—Ä–æ–±–Ω–æ–µ
    if isinstance(a, float) and a.is_integer():
        a = int(a)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ int, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    is_integer = '.' not in str(a)

    # 1) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤
    if is_integer:
        result.append(f'1) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤: {len(str(a))}')
    else:
        result.append(f'1) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤: {len(str(a)) - 1}')

    # 2) –ü–æ–¥—Å—á–µ—Ç –∫–∞–∂–¥–æ–π —Ü–∏—Ñ—Ä—ã
    result.append(f'2) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ —á–∏—Å–ª–µ:')
    digit_count = {str(i): str(a).count(str(i)) for i in range(10) if str(a).count(str(i)) > 0}
    for digit, count in digit_count.items():
        result.append(f'{digit} - {count} —Ä–∞–∑(a)')

    # 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–µ–ª–æ–µ
    if is_integer:
        result.append(f'3) –ß–µ—Ç–Ω–æ–µ' if int(a) % 2 == 0 else f'3) –ù–µ—á–µ—Ç–Ω–æ–µ')
    else:
        result.append('3) –ß–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º, –ø–æ—ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ç–Ω–æ—Å—Ç—å')

    # 4) –°—É–º–º–∞ —Ü–∏—Ñ—Ä
    digit_sum = sum(int(e) for e in str(a) if e.isdigit())
    result.append(f'4) –°—É–º–º–∞ —Ü–∏—Ñ—Ä: {digit_sum}')

    # 5) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–µ–ª–æ–µ
    if is_integer and int(a) > 1:
        divisors = [i for i in range(2, int(a // 2) + 1) if int(a) % i == 0]
        if not divisors:
            result.append(f'5) –ß–∏—Å–ª–æ {a} - –ø—Ä–æ—Å—Ç–æ–µ')
        else:
            result.append(f'5) –ß–∏—Å–ª–æ {a} - –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –¥–µ–ª–∏—Ç–µ–ª–∏: {divisors}')
    else:
        result.append(f'5) –ß–∏—Å–ª–æ {a} - —ç—Ç–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ –º–µ–Ω—å—à–µ 2, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞')

    # 6) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç
    if is_integer:
        square = math.isqrt(int(a))
        if square * square == int(a):
            result.append(f'6) {a} - –ø–æ–ª–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ {square}')
        else:
            result.append(f'6) {a} - –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω—ã–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º')
    else:
        result.append(f'6) –ß–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º, –ø–æ—ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç')

    # 7) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –∫—É–±
    if is_integer:
        cube_root = round(int(a) ** (1 / 3))
        if cube_root ** 3 == int(a):
            result.append(f'7) {a} - –ø–æ–ª–Ω—ã–π –∫—É–± —á–∏—Å–ª–∞ {cube_root}')
        else:
            result.append(f'7) {a} - –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω—ã–º –∫—É–±–æ–º')
    else:
        result.append(f'7) –ß–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º, –ø–æ—ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫—É–±')

    return "\n".join(result)

def convert_to_decimal(a, base):
    return int(a, base)

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def calculator():
    print('–ü—Ä–∏–≤–µ—Ç, —ç—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—á–∏—Ç–∞–µ—Ç, –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–æ–±–æ–π –ø—Ä–∏–º–µ—Ä—ã!üßÆ')
    print('')
    print('1) –î–ª—è –ü–ï–†–í–û–ì–û –¢–ò–ü–ê –î–ï–ô–°–¢–í–ò–ô –≤–≤–µ–¥–∏: —Å–Ω–∞—á–∞–ª–∞ –î–ï–ô–°–¢–í–ò–ï, –∞ –∑–∞—Ç–µ–º –ß–ò–°–õ–ê,'\
          ' –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–µ–π—Å—Ç–≤–∏–µ.')
    print('2) –î–ª—è –í–¢–û–†–û–ì–û –¢–ò–ü–ê –î–ï–ô–°–¢–í–ò–ô –≤–≤–µ–¥–∏: —Å–Ω–∞—á–∞–ª–∞ –î–ï–ô–°–¢–í–ò–ï, –∞ –ø–æ—Ç–æ–º –ß–ò–°–õ–û,'\
          '—Å –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.')
    print('3) –î–ª—è –¢–†–ï–¢–¨–ï–ì–û –¢–ò–ü–ê –î–ï–ô–°–¢–í–ò–ô –≤–≤–µ–¥–∏: —Å–Ω–∞—á–∞–ª–∞ –î–ï–ô–°–¢–í–ò–ï($), –ø–æ—Ç–æ–º'\
          '—á–∏—Å–ª–æ(–≤ –ª—é–±–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è), –Ω—É –∏ —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.')
    print('')

    g = 0
    while g == 0:
        c = input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")

        if c in {'//', '/', '%', '+', '-', '*', '**'}:
            a = float(input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))
            b = float(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            if c == '//':
                print(integer_division(a, b))
            elif c == '/':
                print(division(a, b))
            elif c == '%':
                print(remainder(a, b))
            elif c == '+':
                print(addition(a, b))
            elif c == '-':
                print(subtraction(a, b))
            elif c == '*':
                print(multiplication(a, b))
            elif c == '**':
                print(power(a, b))

        elif c == '&' or c == '@':
            a = float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))

            if c == '&':
                print(square_root(a))
            elif c == '@':
                print(analyze_number(a))

        elif c == '$':
            a = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è: ")
            base = int(input("–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è: "))
            print(convert_to_decimal(a, base))

        else:
            print('Error')
            sys.exit(0)

        print('')
        print('–•–æ—á–µ—à—å –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å —Ä–µ—à–∏—Ç—å?üôÇ')
        print('–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —Ç–æ –Ω–∞–ø–∏—à–∏ - "–î–∞", –∞ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏ - "–ù–µ—Ç"')
        print('')
        m = input()
        if m.lower() in {'–¥–∞', '–î–ê'}:
            g = 0
        elif m.lower() in {'–Ω–µ—Ç', '–ù–ï–¢'}:
            print('–û–ö')
            g = 1
        else:
            print('Error')

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
calculator()